/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 */
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import java.awt.Color;
import java.awt.BorderLayout;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.FileWriter;






public class entradaTexto extends javax.swing.JFrame {

    /**
     * Creates new form entradaTexto
     */
    public entradaTexto() {
        initComponents();
        getContentPane().setBackground(Color.decode("#FFF7EA"));
         JPanel borderPanel = new JPanel();
        borderPanel.setBorder(new LineBorder(Color.decode("#FFAD30"), 2)); // Ajusta el grosor del borde según sea necesario
        borderPanel.setLayout(new BorderLayout());
        borderPanel.add(getContentPane(), BorderLayout.CENTER);
        setContentPane(borderPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        titulo_principal = new javax.swing.JLabel();
        ingrese_texto_titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        entrada_texto = new javax.swing.JTextArea();
        procesar = new javax.swing.JButton();
        label_longitud_texto = new javax.swing.JLabel();
        label_total_palabras = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        repeticiones_e = new javax.swing.JLabel();
        total_palabras = new javax.swing.JLabel();
        ultima_letra_texto = new javax.swing.JLabel();
        primer_letra_texto1 = new javax.swing.JLabel();
        letra_central_texto1 = new javax.swing.JLabel();
        palabra_central = new javax.swing.JLabel();
        primera_palabra = new javax.swing.JLabel();
        ultima_palabra = new javax.swing.JLabel();
        label_longitud_texto1 = new javax.swing.JLabel();
        label_total_palabras1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        longitud_del_texto1 = new javax.swing.JLabel();
        repeticiones_a = new javax.swing.JLabel();
        repeticiones_i = new javax.swing.JLabel();
        repeticiones_o = new javax.swing.JLabel();
        repeticiones_u = new javax.swing.JLabel();
        palabras_impar = new javax.swing.JLabel();
        palabras_par = new javax.swing.JLabel();
        clave_murcielago = new javax.swing.JTextArea();
        ingrese_texto_titulo1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        copiar = new javax.swing.JMenuItem();
        cortar = new javax.swing.JMenuItem();
        pegar = new javax.swing.JMenuItem();
        buscar = new javax.swing.JMenuItem();
        reemplazar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        guardar_como = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jLabel1.setText("jLabel1");

        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(204, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 18)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        titulo_principal.setBackground(new java.awt.Color(97, 85, 65));
        titulo_principal.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        titulo_principal.setText("MANEJO DE CADENAS");

        ingrese_texto_titulo.setBackground(new java.awt.Color(255, 255, 255));
        ingrese_texto_titulo.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        ingrese_texto_titulo.setText("Ingrese un texto o abra un archivo");

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setForeground(new java.awt.Color(0, 204, 204));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        entrada_texto.setColumns(20);
        entrada_texto.setRows(5);
        entrada_texto.setWrapStyleWord(true);
        entrada_texto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        entrada_texto.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        entrada_texto.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(entrada_texto);

        procesar.setBackground(new java.awt.Color(51, 153, 0));
        procesar.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        procesar.setForeground(new java.awt.Color(51, 204, 0));
        procesar.setText("Procesar");
        procesar.setToolTipText("");
        procesar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 51)));
        procesar.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarActionPerformed(evt);
            }
        });

        label_longitud_texto.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        label_longitud_texto.setText("Longitud del texto");

        label_total_palabras.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        label_total_palabras.setForeground(new java.awt.Color(219, 118, 50));
        label_total_palabras.setText("Total de palabras");

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(219, 118, 50));
        jLabel6.setText("Primer letra del texto");

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(219, 118, 50));
        jLabel7.setText("Ultima letra del texto");

        jLabel8.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(219, 118, 50));
        jLabel8.setText("Letra central del texto");

        jLabel9.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(219, 118, 50));
        jLabel9.setText("Primera palabra");

        jLabel10.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(219, 118, 50));
        jLabel10.setText("Palabra central");

        jLabel11.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(219, 118, 50));
        jLabel11.setText("Ultima palabra");

        repeticiones_e.setBackground(new java.awt.Color(255, 102, 102));
        repeticiones_e.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        repeticiones_e.setLabelFor(label_longitud_texto);
        repeticiones_e.setText(".");

        total_palabras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total_palabras.setText(".");

        ultima_letra_texto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultima_letra_texto.setText(".");

        primer_letra_texto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        primer_letra_texto1.setText(".");

        letra_central_texto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        letra_central_texto1.setText(".");

        palabra_central.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        palabra_central.setText(".");

        primera_palabra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        primera_palabra.setText(".");

        ultima_palabra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ultima_palabra.setText(".");

        label_longitud_texto1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        label_longitud_texto1.setForeground(new java.awt.Color(219, 118, 50));
        label_longitud_texto1.setText("Repeticiones de \"A\", \"a\" o \"á\"");

        label_total_palabras1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        label_total_palabras1.setForeground(new java.awt.Color(219, 118, 50));
        label_total_palabras1.setText("Repeticiones de \"E\", \"e\" o\"é\"");

        jLabel12.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(219, 118, 50));
        jLabel12.setText("Repeticiones de \"I\", \"i\" o \"í\"");

        jLabel13.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(219, 118, 50));
        jLabel13.setText("Repeticiones de \"O\", \"o\" o \"ó\"");

        jLabel14.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(219, 118, 50));
        jLabel14.setText("Repeticiones de \"U\", \"u\" o \"ú\"");

        jLabel15.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(219, 118, 50));
        jLabel15.setText("Palabras con cantidad de caracteres par");

        jLabel16.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(219, 118, 50));
        jLabel16.setText("Palabras con cantidad de caractares impar");

        longitud_del_texto1.setBackground(new java.awt.Color(255, 102, 102));
        longitud_del_texto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        longitud_del_texto1.setLabelFor(label_longitud_texto);
        longitud_del_texto1.setText(".");

        repeticiones_a.setBackground(new java.awt.Color(255, 102, 102));
        repeticiones_a.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        repeticiones_a.setLabelFor(label_longitud_texto);
        repeticiones_a.setText(".");

        repeticiones_i.setBackground(new java.awt.Color(255, 102, 102));
        repeticiones_i.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        repeticiones_i.setLabelFor(label_longitud_texto);
        repeticiones_i.setText(".");

        repeticiones_o.setBackground(new java.awt.Color(255, 102, 102));
        repeticiones_o.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        repeticiones_o.setLabelFor(label_longitud_texto);
        repeticiones_o.setText(".");

        repeticiones_u.setBackground(new java.awt.Color(255, 102, 102));
        repeticiones_u.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        repeticiones_u.setLabelFor(label_longitud_texto);
        repeticiones_u.setText(".");

        palabras_impar.setBackground(new java.awt.Color(255, 102, 102));
        palabras_impar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        palabras_impar.setLabelFor(label_longitud_texto);
        palabras_impar.setText(".");

        palabras_par.setBackground(new java.awt.Color(255, 102, 102));
        palabras_par.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        palabras_par.setLabelFor(label_longitud_texto);
        palabras_par.setText(".");

        clave_murcielago.setColumns(20);
        clave_murcielago.setRows(5);
        clave_murcielago.setWrapStyleWord(true);
        clave_murcielago.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clave_murcielago.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        clave_murcielago.setRequestFocusEnabled(false);

        ingrese_texto_titulo1.setBackground(new java.awt.Color(255, 255, 255));
        ingrese_texto_titulo1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        ingrese_texto_titulo1.setText("TRADUCCION A CLAVE MURCIELAGO");

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 102, 0)));
        jMenuBar1.setAutoscrolls(true);
        jMenuBar1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        jMenu3.setText("Editar");

        copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copiar.setText("Copiar");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        jMenu3.add(copiar);

        cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cortar.setText("Cortar");
        cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarActionPerformed(evt);
            }
        });
        jMenu3.add(cortar);

        pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pegar.setText("Pegar");
        pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarActionPerformed(evt);
            }
        });
        jMenu3.add(pegar);

        buscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        jMenu3.add(buscar);

        reemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        reemplazar.setText("Reemplazar");
        reemplazar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                reemplazarAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        reemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reemplazarActionPerformed(evt);
            }
        });
        jMenu3.add(reemplazar);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        guardar_como.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        guardar_como.setText("Guardar Como");
        guardar_como.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_comoActionPerformed(evt);
            }
        });
        jMenu1.add(guardar_como);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Guardar");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ingrese_texto_titulo)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(label_longitud_texto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(label_total_palabras, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(total_palabras, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ultima_letra_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(primer_letra_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(palabra_central, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(primera_palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ultima_palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(letra_central_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(longitud_del_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(74, 74, 74)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(label_longitud_texto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(label_total_palabras1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(repeticiones_e, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(repeticiones_i, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(repeticiones_o, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(repeticiones_u, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(palabras_impar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(palabras_par, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(repeticiones_a, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(clave_murcielago, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(titulo_principal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(ingrese_texto_titulo1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(titulo_principal)
                .addGap(34, 34, 34)
                .addComponent(ingrese_texto_titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_longitud_texto)
                            .addComponent(longitud_del_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_total_palabras)
                            .addComponent(total_palabras, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(primer_letra_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(ultima_letra_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(letra_central_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(primera_palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(palabra_central, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(ultima_palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_longitud_texto1)
                            .addComponent(repeticiones_a, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_total_palabras1)
                            .addComponent(repeticiones_e, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(repeticiones_i, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(repeticiones_o, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(repeticiones_u, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(palabras_par, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(palabras_impar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)))
                .addComponent(ingrese_texto_titulo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(clave_murcielago, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarActionPerformed
        // TODO add your handling code here:
         String text = this.entrada_texto.getText();
         //se limpia la entreda de espacios y saltos de linea y se reemplaza por una cadena vacia:
         String textoLimpio = text.replaceAll("\\s+", "");
         //calculo del largo del textolimpio
         int largo = textoLimpio.length();
         longitud_del_texto1.setText(String.valueOf(largo));
         String[] words = text.split("\\s+");
         int contador_palabras = words.length;
         this.total_palabras.setText(String.valueOf(contador_palabras));
         char primeraLetra = text.charAt(0);
         this.primer_letra_texto1.setText(String.valueOf(primeraLetra));
         char ultimaLetra = text.charAt(text.length() - 1);
         this.ultima_letra_texto.setText(String.valueOf(ultimaLetra));
         int letraCentralIndex = textoLimpio.length() / 2;
         char letraCentral = textoLimpio.charAt(letraCentralIndex);
         this.letra_central_texto1.setText(Character.toString(letraCentral));
         //ultima letra
         this.primera_palabra.setText(words[0]);
         this.palabra_central.setText(words[contador_palabras/2]);
         this.ultima_palabra.setText(words[contador_palabras-1]);
         
         //letras
         int contadorA = 0, contadorE = 0, contadorI = 0, contadorO = 0, contadorU = 0;

        for (int i = 0; i < text.length(); i++) {
            char c = text.charAt(i);

            switch (c) {
                case 'A', 'a', 'á' -> contadorA++;
                case 'E', 'e', 'é' -> contadorE++;
                case 'I', 'i', 'í' -> contadorI++;
                case 'O', 'o', 'ó' -> contadorO++;
                case 'U', 'u', 'ú' -> contadorU++;
                default -> {
                 }
            }
             // No hacer nada si el carácter no es una vocal
        }
        this.repeticiones_a.setText(String.valueOf(contadorA));
        this.repeticiones_e.setText(String.valueOf(contadorE));
        this.repeticiones_i.setText(String.valueOf(contadorI));
        this.repeticiones_o.setText(String.valueOf(contadorO));
        this.repeticiones_u.setText(String.valueOf(contadorU));
        
        //palabras pares e impares
        int par=0,impar=0;
        
        for (int i = 0; i < contador_palabras; i++){
            int longitud = words[i].length();
            if (longitud  % 2 == 0){
                par++;
            }else{
                impar++;
            }
        }
        this.palabras_par.setText(String.valueOf(par));
            this.palabras_impar.setText(String.valueOf(impar));
            
            // Crear un StringBuilder para construir el resultado final
            StringBuilder resultadoFinal = new StringBuilder();

            for (String i : words) {
                String[] caracteres = i.split("");
                StringBuilder nuevaLetraM = new StringBuilder();

                for (String M : caracteres) {
                    switch (M.toLowerCase()) {
                        case "m" -> nuevaLetraM.append("0");
                        case "u" -> nuevaLetraM.append("1");
                        case "r" -> nuevaLetraM.append("2");
                        case "c" -> nuevaLetraM.append("3");
                        case "i" -> nuevaLetraM.append("4");
                        case "e" -> nuevaLetraM.append("5");
                        case "l" -> nuevaLetraM.append("6");
                        case "a" -> nuevaLetraM.append("7");
                        case "g" -> nuevaLetraM.append("8");
                        case "o" -> nuevaLetraM.append("9");
                        default -> nuevaLetraM.append(M); // Mantener el carácter si no coincide con ninguna regla
                    } 
                }

                // Añadir la palabra procesada al resultado final
                resultadoFinal.append(nuevaLetraM.toString()).append(" ");
            }

            // Convertir el resultado final a cadena y eliminar el espacio extra al final
            String resultado = resultadoFinal.toString().trim();

            // Imprimir el resultado
            this.clave_murcielago.setText(resultado);


    
    }//GEN-LAST:event_procesarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            try (BufferedReader reader = new BufferedReader(new FileReader(archivoSeleccionado))) {
                StringBuilder contenido = new StringBuilder();
                String linea;
                while ((linea = reader.readLine()) != null) {
                    contenido.append(linea).append("\n");
                }
                // Establecer el contenido en el JTextField
                entrada_texto.setText(contenido.toString());
            } catch (IOException e) {
                // Manejar excepciones si ocurre algún problema al leer el archivo
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al abrir el archivo.");
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void guardar_comoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_comoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int resultado = fileChooser.showSaveDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(archivoSeleccionado+".txt"))) {
                // Obtener el contenido del JTextField
                String contenido = entrada_texto.getText();
                // Escribir el contenido en el archivo
                writer.write("El texto ingresado a verificar es: " + contenido);
                writer.write("\nLongitud del texto es: "+this.longitud_del_texto1.getText());
                writer.write("\nTotal de palabras es: "+this.total_palabras.getText());
                writer.write("\nPrimer letra del texto: "+this.primer_letra_texto1.getText());
                writer.write("\nUltima letra del texto: "+this.ultima_letra_texto.getText());
                writer.write("\nLetra central del texto: "+this.letra_central_texto1.getText());
                writer.write("\nPrimera palabra: "+this.primera_palabra.getText());
                writer.write("\nPalabra central: "+this.palabra_central.getText());
                writer.write("\nUltima palabra: "+this.ultima_palabra.getText());
                writer.write("\nRepeticiones de \"A\", \"a\" o \"á\": "+this.repeticiones_a.getText());
                writer.write("\nRepeticiones de \"E\", \"e\" o\"é\": "+this.repeticiones_e.getText());
                writer.write("\nRepeticiones de \"I\", \"i\" o \"í\" "+this.repeticiones_i.getText());
                writer.write("\nRepeticiones de \"O\", \"o\" o \"ó\" "+this.repeticiones_o.getText());
                writer.write("\nRepeticiones de \"U\", \"u\" o \"ú\" "+this.repeticiones_u.getText());
                writer.write("\nPalabras con cantidad de caracteres par "+this.palabras_par.getText());
                writer.write("\nPalabras con cantidad de caracteres impar "+this.palabras_impar.getText());
                writer.write("\nClave Murcielago es: " + this.clave_murcielago.getText());
                
                JOptionPane.showMessageDialog(null, "Archivo guardado correctamente.");
            } catch (IOException e) {
                // Manejar excepciones si ocurre algún problema al guardar el archivo
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al guardar el archivo.");
            }
        }
    }//GEN-LAST:event_guardar_comoActionPerformed

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        String texto = entrada_texto.getText();
    
    // Copiar el texto al portapapeles
    java.awt.datatransfer.StringSelection seleccion = new java.awt.datatransfer.StringSelection(texto);
    java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().setContents(seleccion, null);
    }//GEN-LAST:event_copiarActionPerformed

    private void cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarActionPerformed
        String texto = entrada_texto.getText();
    
    // Copiar el texto al portapapeles
    java.awt.datatransfer.StringSelection seleccion = new java.awt.datatransfer.StringSelection(texto);
    java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().setContents(seleccion, null);
    
    // Eliminar el texto del JTextField
    entrada_texto.setText("");
    }//GEN-LAST:event_cortarActionPerformed

    private void pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarActionPerformed
        try {
        // Obtener el contenido del portapapeles
        java.awt.datatransfer.Clipboard portapapeles = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
        java.awt.datatransfer.Transferable contenido = portapapeles.getContents(null);
        
        // Verificar si el contenido es de tipo String
        if (contenido != null && contenido.isDataFlavorSupported(java.awt.datatransfer.DataFlavor.stringFlavor)) {
            String texto = (String) contenido.getTransferData(java.awt.datatransfer.DataFlavor.stringFlavor);
            
            // Pegar el texto en el JTextField
            entrada_texto.setText(texto);
        }
        } catch (java.awt.datatransfer.UnsupportedFlavorException | java.io.IOException ex) {
        // Manejo de excepciones
        ex.printStackTrace();
    }
    }//GEN-LAST:event_pegarActionPerformed

    private void reemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reemplazarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reemplazarActionPerformed

    private void reemplazarAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_reemplazarAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_reemplazarAncestorAdded
            
    
         
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(entradaTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(entradaTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(entradaTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(entradaTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new entradaTexto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem buscar;
    private javax.swing.JTextArea clave_murcielago;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JTextArea entrada_texto;
    private javax.swing.JMenuItem guardar_como;
    private javax.swing.JLabel ingrese_texto_titulo;
    private javax.swing.JLabel ingrese_texto_titulo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_longitud_texto;
    private javax.swing.JLabel label_longitud_texto1;
    private javax.swing.JLabel label_total_palabras;
    private javax.swing.JLabel label_total_palabras1;
    private javax.swing.JLabel letra_central_texto1;
    private javax.swing.JLabel longitud_del_texto1;
    private javax.swing.JLabel palabra_central;
    private javax.swing.JLabel palabras_impar;
    private javax.swing.JLabel palabras_par;
    private javax.swing.JMenuItem pegar;
    private javax.swing.JLabel primer_letra_texto1;
    private javax.swing.JLabel primera_palabra;
    private javax.swing.JButton procesar;
    private javax.swing.JMenuItem reemplazar;
    private javax.swing.JLabel repeticiones_a;
    private javax.swing.JLabel repeticiones_e;
    private javax.swing.JLabel repeticiones_i;
    private javax.swing.JLabel repeticiones_o;
    private javax.swing.JLabel repeticiones_u;
    private javax.swing.JLabel titulo_principal;
    private javax.swing.JLabel total_palabras;
    private javax.swing.JLabel ultima_letra_texto;
    private javax.swing.JLabel ultima_palabra;
    // End of variables declaration//GEN-END:variables

}
